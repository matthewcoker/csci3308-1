step 2:
diff fruitsOld.txt fruitsNew.txt
	remove cranberry, nectarine, prickly pear
	add jackfruit
	< means the value is in the first file
	> means the value is in the second file
	diff -c f1 f2 shows 3 lines above and below the diff values

step 3:
wc testPasswd.txt
wc -l prints the number of lines = 15
wc -m prints the number of chars = 692

step 4:
cut -d':' -f1 testPasswd.txt
	prints the first column separated by a colon
cut -d' ' -f1,4 grades.txt
	prints only the LN(1st) and HW1(4th) column separated by a space

step 5:
cut -d':' -f4 testPasswd.txt | sort -n | uniq
cut -d':' -f4 testPasswd.txt | sprt -n | uniq > lab2step5.txt
cut -d':' -f1,6 testPasswd.txt | grep '^[mws]'

step 6:
sed 's/[a-z]//g' leetSpeak.txt
	removes every letter in the file
sed 's/[0-9]//g' leetSpeak.txt
	removes every digit in the file
sed 's/[0-9]/_/g' leetSpeak.txt
	replaces every digit in the file with a '_'
sed 's/0/o/g;s/1/i/g;s/3/e/g;s/4/a/g;s/5/s/g;s/7/t/g' leetSpeak.txt
	replaces every digit with the corresponding letter without piping
cat leetSpeak.txt | sed 's/0/o/g' | sed 's/1/i/g' | sed 's/3/e/g' | sed 's/4/a/g' | sed 's/5/s/g' | sed 's/7/t/g'
	replaces every digit with the corresponding letter with piping

step 7:
awk '{sum=0; for (i=3;i<=NF;i++) sum+=$i; print $1, $2, sum*100/(NF-2)}' grades.txt
OR
awk '{print $1, $2, (NR>1 ? 100*gsub(1,10)/(NF-2) : "Average")}' grades.txt

step 8:
cat regex_practice_data.txt | egrep -c '^\d{3}-\d{3}-\d{4}$'
	there are 767 phone numbers
cat regex_practice_data.txt | egrep -c '^303-441-\d{4}$'
	there are 51 phone numbers from the city of boulder
cat regex_practice_data.txt | egrep -c '@'
	there are 17706 email addresses
cat regex_practice_data.txt | egrep -c '.gov$'
	there are 53 email addresses from government domains
cat regex_practice_data.txt | egrep -c '^[a-m]\w+\.\w+@'
	there are 12 email addresses in 'first.last' name format
	and their first name begins with a letter between a-m

